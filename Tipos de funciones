{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMml0bK4/aUTAUuPdc4I4Xa",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aduran162/PROGCOM-A/blob/main/Untitled2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#FUNCIONES\n",
        "Copiado dinámico.\n",
        "Dio nacimineto a un nuevo paradigma de programación llamado programación modular.\n",
        "\n",
        "##Forma general de programar funciones.\n",
        "```\n",
        "def (nombre_de_funcion)(p,p2,p3...pn):\n",
        "  donde p, p2, p3...pn: son parámetros\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "d2pVbwJr3A9a"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. list()\n",
        "2. len()\n",
        "3. print()\n",
        "4. append()#Método\n",
        "5. Int ()\n",
        "6. Input()"
      ],
      "metadata": {
        "id": "2PkgU3ib4S5R"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Tipos de funciones\n",
        "1. Sin parametros, sin retorno\n",
        "2. Sin parametros, con retorno\n",
        "3. Con parametros, sin retorno\n",
        "4. con parametros, con retorno"
      ],
      "metadata": {
        "id": "Z3We9eGD5Tgq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##1.Sin parametros, sin retorno\n",
        "se emplea como copiado dinamico"
      ],
      "metadata": {
        "id": "JGD56cD55stP"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "YIqLvOl329cG"
      },
      "outputs": [],
      "source": [
        "#Ejemplo: Entrada de cajero electronico\n",
        "def cajero():# Esto significa que es sin parametros\n",
        "  print(\"Bienvenido a DaviUNAB\")\n",
        "  print(\"Estas son las operaciones que puede realizar:\")\n",
        "  print(\"1. Retirar\\n2. Transferencia\\n3. Denunciar\\n4. Operaciones sin tarjeta\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cajero()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dgY6Xw1t7WsG",
        "outputId": "9f876588-baa0-49ce-e969-ffde0be5ae9b"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Bienvenido a DaviUNAB\n",
            "Estas son las operaciones que puede realizar:\n",
            "1. Retirar\n",
            "2. Transferencia\n",
            "3. Denunciar\n",
            "4. Operaciones sin tarjeta\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###2. Sin parametros, con retorno"
      ],
      "metadata": {
        "id": "KkJnvtXo8fFd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def cajero2():# Esto significa que es sin parametros\n",
        "  print(\"Bienvenido a DaviUNAB\")\n",
        "  print(\"Estas son las operaciones que puede realizar:\")\n",
        "  print(\"1. Retirar\\n2. Transferencia\\n3. Denunciar\\n4. Operaciones sin tarjeta\")\n",
        "  rta=input(\"Ingrese una opcion\")#Variable local\n",
        "  return rta#Vuela una variable local a global"
      ],
      "metadata": {
        "id": "6yaposZ28rDk"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cajero2()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BTDvS1tJ9DqE",
        "outputId": "96bf611d-df2c-4b45-d1e2-e484fbb3ff60"
      },
      "execution_count": 6,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Bienvenido a DaviUNAB\n",
            "Estas son las operaciones que puede realizar:\n",
            "1. Retirar\n",
            "2. Transferencia\n",
            "3. Denunciar\n",
            "4. Operaciones sin tarjeta\n",
            "Ingrese una opcion2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "rta=cajero2()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "30ai47Eu9CkH",
        "outputId": "587e8b26-b27a-4ac1-870b-128639e96a3b"
      },
      "execution_count": 7,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Bienvenido a DaviUNAB\n",
            "Estas son las operaciones que puede realizar:\n",
            "1. Retirar\n",
            "2. Transferencia\n",
            "3. Denunciar\n",
            "4. Operaciones sin tarjeta\n",
            "Ingrese una opcion2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(rta)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NM_iVAJk-w-T",
        "outputId": "7610135f-499b-4a5b-a287-441feea4c363"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "NoneType"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##3.Conj parametros, sin retorno"
      ],
      "metadata": {
        "id": "CCPLZuiK_HzC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Ejemplo: el area de un rectangulo\n",
        "def ab(u,du):\n",
        "  print(f\"El area de un rectangulo de lado[{u} y altura {du} es {u*du}\")\n"
      ],
      "metadata": {
        "id": "wpKz78Xc_OUC"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "a=ab(2,3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aR6NVQjg_oBs",
        "outputId": "b31afc48-e060-43e3-c6f7-05d9ae41ee03"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "El area de un rectangulo de lado[2 y altura 3 es 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(a)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ucPqVnokAGf8",
        "outputId": "9b9a1191-86ef-45c4-fd31-ef529f2ee7b4"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "None\n"
          ]
        }
      ]
    }
  ]
}
